import pandas as pd
import numpy as np
from datetime import datetime
from scipy.stats import percentileofscore

# Load the data
sold = pd.read_csv(r"C:\Users\jackd\Desktop\IMPORTANT_RES_MF_09-21-2021-06-30-2024.csv", low_memory=False, encoding='latin1')

# Select relevant columns
sold = sold[["MLS1", "GEOID", "PROPTYPE", "ABGSQFT", 'TOT_SQFT', "CLOSEPRICE", "CLOSEDATE", "CITY", "COUNTY", "MHIA21", "AHIA21", "ACRES", "STYLE", "YEARBUILT", "DIRECT", "DOM", 'HOA', 'PROPTAX', "OWNOCCA21", "TOTHSGA21", "TOTPOPA21", "ALAND", "LATITUDE", "LONGITUDE", "BATHSTOTAL", "VACANTA21", "HHA21"]]

# Update 'PROPTYPE' based on 'STYLE'
sold.loc[sold['STYLE'].str.contains('Townhouse', na=False), 'PROPTYPE'] = 'TH'
sold.loc[sold['STYLE'].str.contains('Mobile Home', na=False), 'PROPTYPE'] = 'MH'
sold.loc[sold['STYLE'].str.contains('Cape Cod', na=False), 'PROPTYPE'] = 'SC'

sold['VACANCY'] = sold["VACANTA21"] / sold["HHA21"]

# Convert 'CLOSEDATE' to datetime format and extract the year
sold['CLOSEDATE'] = pd.to_datetime(sold['CLOSEDATE'], errors='coerce')
sold['CLOSEYEAR'] = sold['CLOSEDATE'].dt.year

# Create P_SQFT
sold['P_SQFT'] = sold['CLOSEPRICE'] / sold['ABGSQFT']

# Define function to choose income
def choose_income(row):
    if 1 < row["MHIA21"] <= 250000:
        return row["MHIA21"]
    else:
        return row["AHIA21"]
    
sold["INCOME"] = sold.apply(choose_income, axis=1)

tax_bins = [
    -np.inf, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 
    5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500, 
    13000, 13500, 14000, 14500, 15000, 15500, 16000, 16500, 17000, 17500, 18000, 18500, 19000, 19500, 20000, 21000, 22000, 
    23000, 24000, 25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 
    33000, 34000, 35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 
    43000, 44000, 45000, 46000, 47000, 48000, 49000, 50000, np.inf
]

tax_bin_labels = [
    '<500', '500-1000', '1000-1500', '1500-2000', '2000-2500', '2500-3000', 
    '3000-3500', '3500-4000', '4000-4500', '4500-5000', '5000-5500', 
    '5500-6000', '6000-6500', '6500-7000', '7000-7500', '7500-8000', 
    '8000-8500', '8500-9000', '9000-9500', '9500-10000', '10000-10500', 
    '10500-11000', '11000-11500', '11500-12000', '12000-12500', '12500-13000', 
    '13000-13500', '13500-14000', '14000-14500', '14500-15000', '15000-15500', 
    '15500-16000', '16000-16500', '16500-17000', '17000-17500', '17500-18000', 
    '18000-18500', '18500-19000', '19000-19500', '19500-20000', '20000-21000', 
    '21000-22000', '22000-23000', '23000-24000', '24000-25000', '25000-26000', 
    '26000-27000', '27000-28000', '28000-29000', '29000-30000', '30000-31000', 
    '31000-32000', '32000-33000', '33000-34000', '34000-35000', '35000-36000', 
    '36000-37000', '37000-38000', '38000-39000', '39000-40000', '40000-41000', 
    '41000-42000', '42000-43000', '43000-44000', '44000-45000', '45000-46000', 
    '46000-47000', '47000-48000', '48000-49000', '49000-50000', '>50000'
]

# Create a new column 'TAX_BIN' with the binned data
sold['TAX_BIN'] = pd.cut(sold['PROPTAX'], bins=tax_bins, labels=tax_bin_labels)

# Group by 'TAX_BIN' and include additional columns using first()
grouped = sold.groupby(['CLOSEYEAR', 'CITY', 'PROPTYPE', 'DIRECT', 'TAX_BIN']).agg(
    median_closeprice=('CLOSEPRICE', 'median'),
    max_closeprice = ('CLOSEPRICE', 'max'),
    min_closeprice =('CLOSEPRICE', 'min'),
    count=('CLOSEPRICE', 'size'),
    ABGSQFT=('ABGSQFT', 'median'),
    TOT_SQFT=('TOT_SQFT', 'median'),
    ACRES=('ACRES', 'median'),
    INCOME=('INCOME', 'median'),
    YEAR_BUILT=("YEARBUILT", 'median')
).reset_index()

# Filter groups where the count is at least 2
filtered = grouped[grouped['count'] >= 2]

# Sort the filtered DataFrame by the grouping columns and CLOSEYEAR
filtered.sort_values(by=['CITY', 'PROPTYPE', 'DIRECT', 'TAX_BIN', 'CLOSEYEAR'], inplace=True)

# Calculate the year-over-year changes for median_closeprice
filtered['median_closeprice_yoy_change'] = filtered.groupby(['CITY', 'PROPTYPE', 'DIRECT', 'TAX_BIN'])['median_closeprice'].pct_change()

# Print the result with year-over-year change
print(filtered[['CLOSEYEAR', 'CITY', 'PROPTYPE', 'DIRECT', 'ABGSQFT', 'TOT_SQFT', 'ACRES', 'INCOME', 'YEAR_BUILT', 'TAX_BIN', 'median_closeprice', 'max_closeprice', 'min_closeprice', 'count', 'median_closeprice_yoy_change']])

# Save the result to a CSV file
filtered[['CLOSEYEAR', 'CITY', 'PROPTYPE', 'DIRECT', 'ABGSQFT', 'TOT_SQFT', 'ACRES', 'INCOME', 'YEAR_BUILT', 'TAX_BIN', 'median_closeprice', 'max_closeprice', 'min_closeprice', 'count', 'median_closeprice_yoy_change']].to_csv(r'C:\cctaddr\RES_SOLD_SORTED.csv', index=False)
